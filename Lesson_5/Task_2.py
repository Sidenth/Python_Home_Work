# Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры
# (4, 6 и 0) и 2 нечетные (3 и 5).
# Подсказка:
# На каждом шаге вам нужно 'доставать' из числа очередную цифру
# и смотреть является ли она четной или нечетной.
# При этом увеличиваем соответствующий счетчик
# Пока все числа не извлечены, рекурсивные вызовы продолжаем
# Условие завершения рекурсии - все числа извлечены
# Используем операции % //. Операции взятия по индексу применять нельзя.
# Решите через рекурсию. В задании нельзя применять циклы.
# Пример:
# Введите число: 123
# Количество четных и нечетных цифр в числе равно: (1, 2)

def count_odd_even(num, even_num, odd_num, odd_list, even_list):
    if num < 1:
        return print(f"Кол-во четных чисел - {even_num} - {odd_list}, Кол-во нечетных чисел - {odd_num} - {even_list}")
    else:
        if num % 10 % 2 == 0:
            even_num += 1
            odd_list.append(num % 10)
        else:
            odd_num += 1
            even_list.append(num % 10)
    return count_odd_even(num // 10, even_num, odd_num, odd_list, even_list)


odd_counter = 0
even_counter = 0
odd_list = []
even_list = []

try:
    num = int(input("Введите число: "))
    count_odd_even(num, odd_counter, even_counter, odd_list, even_list)
except ValueError:
    print("Ошибка ввода ")
